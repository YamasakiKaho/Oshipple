@model PaginatedList<Oshipple.Models.AllSongs>

@{
    ViewData["Title"] = "Index";
}
<body style="background-color: white;">


    <h1 style="color: black;">AdAllSongs</h1>

    <p>
        <a asp-action="Create" type="button" class="btn btn-outline-primary">新規追加</a>
    </p>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="AdSongs"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="AdSongs"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn @nextDisabled">
        Next
    </a>

    <table class="table">
        <thead>
            <tr>
                <!--
                <th>
                    Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Title_Kana)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Artist)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Artist_Kana)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Selector)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Mood1)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Mood2)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Rank)
                </th>
                <th>
                    Html.DisplayNameFor(model => model.Comment)
                </th>
                <th></th>
                -->

                <th>
                    Title
                </th>
                <th>
                    Title_Kana
                </th>
                <th>
                    Artist
                </th>
                <th>
                    Artist_Kana
                </th>
                <th>
                    Selector
                </th>
                <th>
                    Mood1
                </th>
                <th>
                    Mood2
                </th>
                <th>
                    Rank
                </th>
                <th>
                    Comment
                </th>
                <th style="width: 250px;"></th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title_Kana)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Artist)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Artist_Kana)
                    </td>
                    <td style="width: 100px;">
                        @Html.DisplayFor(modelItem => item.Selector)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mood1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mood2)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rank)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td style="width: 250px;">
                        <a asp-action="Edit" asp-route-id="@item.Id" type="button" class="btn btn-outline-success">編集</a> |
                        <a asp-action="AdDetails" asp-route-id="@item.Id" type="button" class="btn btn-outline-warning">詳細</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" type="button" class="btn btn-outline-danger">削除</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="AdSongs"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="AdSongs"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn @nextDisabled">
        Next
    </a>

</body>
<style>
    .table{
        width: 100%; 
        /*table-layout: fixed;*/
    }
</style>